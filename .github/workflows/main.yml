name: Build and Release
# If Action doesn't run, check: https://www.githubstatus.com/
on:
  push:
    branches: [ "main" ]
    paths:
      - '**.go'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.go'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build for Ubuntu
        run: GOOS=linux go build -o stgo-linux *.go
      
      - name: Build for Mac Darwin
        run: GOOS=darwin go build -o stgo-darwin *.go

      - uses: actions/upload-artifact@v2
        with:
          name: linux-build
          path: ./stgo-linux

      - uses: actions/upload-artifact@v2
        with:
          name: darwin-build
          path: ./stgo-darwin
          
  release:
    needs: [build]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: linux-build
      - uses: actions/download-artifact@v2
        with:
          name: darwin-build

      - name: Set revision environment variable
        run: |
          REVISION=$(git rev-parse --short HEAD)
          echo "REVISION=$REVISION" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ env.REVISION }}
          release_name: Release v${{ env.REVISION }}

          body: |
            Changes in this release:
            ${{ join(github.event.commits.*.message, '\n- ') }}
          draft: false
          prerelease: false
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./stgo-linux
          asset_name: stgo-linux
          asset_content_type: application/octet-stream

      - name: Upload Darwin Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./stgo-darwin
          asset_name: stgo-darwin
          asset_content_type: application/octet-stream
